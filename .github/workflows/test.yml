name: test
on: [ push, pull_request ]

jobs:
  uv-setup:
    name: "tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.5-bookworm
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: bitnami/redis:8.0.2
        env:
          ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 6379:6379

      mailhog:
        image: mailhog/mailhog:v1.0.1
        ports:
          - 1025:1025
          - 8025:8025

      minio:
        image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/ready || exit 1"
          --health-interval 5s
          --health-retries 10
        env:
          MINIO_ROOT_USER: test_access_key
          MINIO_ROOT_PASSWORD: test_secret_key
        ports:
          - 9000:9000

    steps:
      - uses: actions/checkout@v4

      - name: Wait for MinIO
        run: |
          for i in {1..20}; do
          curl -s http://localhost:9000/minio/health/ready && break
          sleep 2
          done

      - name: Install MC and Create bucket
        run: |
          curl -fsSL https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/local/bin/mc
          chmod +x /usr/local/bin/mc
          mc alias set local http://localhost:9000 test_access_key test_secret_key
          mc mb --ignore-existing local/test-bucket

      - name: Install uv
        uses: astral-sh/setup-uv@v6.3.1

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync

      - name: Run tests
        run: |
          uv run pytest
