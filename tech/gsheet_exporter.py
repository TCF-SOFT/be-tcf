import gspread
import numpy as np
import pandas as pd
from loguru import logger
from sqlalchemy import create_engine

from src.config.config import settings

TABLE = "new_price_ford"
SHEETS = ["categories", "sub_categories", "products"]


# handle '' with None before export
def load_sheet_to_db():
    # --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets ---
    gc = gspread.service_account(filename="credentials/tcf-service-account.json")
    sh = gc.open(TABLE)

    # --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î (sync URL for SQLAlchemy engine) ---
    db_url = settings.DB.PSQL_URL.replace("asyncpg", "psycopg2")
    engine = create_engine(db_url)

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞ ---
    for sheet_name in SHEETS:
        worksheet = sh.worksheet(sheet_name)
        data = worksheet.get_all_values()

        df = pd.DataFrame(data)
        df.columns = df.iloc[0]  # –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏
        df = df.drop(0).reset_index(drop=True)
        df.replace(r"^\s*$", np.nan, regex=True, inplace=True)

        logger.info(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É {sheet_name}")
        df.to_sql(sheet_name, engine, if_exists="append", index=False)

    logger.success("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    load_sheet_to_db()
