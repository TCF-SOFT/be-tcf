{
  "openapi": "3.1.0",
  "info": {
    "title": "TCF API",
    "summary": "API to calculate the predicted price for a vehicle with given features",
    "description": "\n## How to use this API\nlore ipsum dolor sit amet consectetur adipiscing elit\n\n## Available ENUMs\nlore ipsum dolor sit amet consectetur adipiscing elit\n",
    "contact": {
      "name": "Vadym Tatarinov",
      "url": "https://ford-parts.com.ru/",
      "email": "utikpuhlik@protonmail.ch"
    },
    "version": "1.2.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8080",
      "description": "Local environment"
    },
    {
      "url": "https://api.dev.alpha-analytics.dev/v2/pricingv2/predict_price",
      "description": "Development environment"
    },
    {
      "url": "https://api.stage.alpha-analytics.dev/v2/pricingv2/predict_price",
      "description": "Staging environment"
    },
    {
      "url": "https://api.prod.alpha-analytics.dev/v2/pricingv2/predict_price",
      "description": "Production environment"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth:Access-Tokens-Db.Login",
        "operationId": "auth_access_tokens_db_login_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_access_tokens_db_login_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BearerResponse"
                },
                "example": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                  "token_type": "bearer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": {
                      "detail": "LOGIN_BAD_CREDENTIALS"
                    }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": {
                      "detail": "LOGIN_USER_NOT_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth:Access-Tokens-Db.Logout",
        "operationId": "auth_access_tokens_db_logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register:Register",
        "operationId": "register_register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "REGISTER_USER_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "REGISTER_USER_ALREADY_EXISTS"
                    }
                  },
                  "REGISTER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "REGISTER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/request-verify-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify:Request-Token",
        "operationId": "verify_request_token_auth_request_verify_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify:Verify",
        "operationId": "verify_verify_auth_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "VERIFY_USER_BAD_TOKEN": {
                    "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                    "value": {
                      "detail": "VERIFY_USER_BAD_TOKEN"
                    }
                  },
                  "VERIFY_USER_ALREADY_VERIFIED": {
                    "summary": "The user is already verified.",
                    "value": {
                      "detail": "VERIFY_USER_ALREADY_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset:Forgot Password",
        "operationId": "reset_forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset:Reset Password",
        "operationId": "reset_reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "RESET_PASSWORD_BAD_TOKEN": {
                    "summary": "Bad or expired token.",
                    "value": {
                      "detail": "RESET_PASSWORD_BAD_TOKEN"
                    }
                  },
                  "RESET_PASSWORD_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "RESET_PASSWORD_INVALID_PASSWORD",
                        "reason": "Password should be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Current User",
        "operationId": "users_current_user_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Patch Current User",
        "operationId": "users_patch_current_user_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:User",
        "operationId": "users_user_users__id__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Patch User",
        "operationId": "users_patch_user_users__id__patch",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Delete User",
        "operationId": "users_delete_user_users__id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return all users or filter them",
        "operationId": "get_users_users_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "admin",
                    "employee",
                    "user"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRead"
                  },
                  "title": "Response Get Users Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "get_categories_categories_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategorySchema"
                  },
                  "title": "Response Get Categories Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "operationId": "post_category_categories_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_category_categories_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategorySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories/slug/{slug}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by slug",
        "operationId": "get_category_by_slug_categories_slug__slug__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CategorySchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Category By Slug Categories Slug  Slug  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by id",
        "operationId": "get_category_by_id_categories__id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CategorySchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Category By Id Categories  Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{category_id}": {
      "patch": {
        "tags": [
          "Categories"
        ],
        "summary": "Selective update category by id",
        "operationId": "patch_category_categories__category_id__patch",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_patch_category_categories__category_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategorySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category by id",
        "operationId": "delete_category_categories__category_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sub-categories": {
      "get": {
        "tags": [
          "Sub-Categories"
        ],
        "summary": "Get Sub Categories",
        "operationId": "get_sub_categories_sub_categories_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "category_slug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Category Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubCategorySchema"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Sub Categories Sub Categories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sub-Categories"
        ],
        "summary": "Post Sub Category",
        "operationId": "post_sub_category_sub_categories_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_sub_category_sub_categories_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCategorySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sub-categories/{slug}": {
      "get": {
        "tags": [
          "Sub-Categories"
        ],
        "summary": "Get Sub Category By Slug",
        "operationId": "get_sub_category_by_slug_sub_categories__slug__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SubCategorySchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Sub Category By Slug Sub Categories  Slug  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sub-categories/{sub_category_id}": {
      "put": {
        "tags": [
          "Sub-Categories"
        ],
        "summary": "Update a sub_category by id",
        "operationId": "put_sub_category_sub_categories__sub_category_id__put",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sub_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Sub Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_put_sub_category_sub_categories__sub_category_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCategorySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sub-Categories"
        ],
        "summary": "Delete sub_category by id",
        "operationId": "delete_sub_category_sub_categories__sub_category_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sub_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Sub Category Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Return all products with pagination or filter them",
        "operationId": "get_products_products_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sub_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub Category Id"
            }
          },
          {
            "name": "sub_category_slug",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sub Category Slug"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Is Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProductSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create new product",
        "operationId": "post_product_products_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_product_products_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Return product by id",
        "operationId": "get_product_products__product_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProductSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Product Products  Product Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product by id",
        "operationId": "put_product_products__product_id__put",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_put_product_products__product_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by id",
        "operationId": "delete_product_products__product_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search products by name",
        "operationId": "search_products_by_name_products_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProductSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/products/text_search": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Full text search products",
        "operationId": "full_text_search_products_products_text_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_ProductSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Return all offers with pagination or filter them",
        "operationId": "get_offers_offers_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product Id"
            }
          },
          {
            "name": "is_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Is Deleted"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_OfferSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Create new offer",
        "operationId": "post_offer_offers_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferPostSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/offers/{offer_id}": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Return offer by id",
        "operationId": "get_offer_offers__offer_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Offer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Offers"
        ],
        "summary": "Update offer by id",
        "operationId": "put_offer_offers__offer_id__put",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Offer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferPutSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Offers"
        ],
        "summary": "Delete offer by id",
        "operationId": "delete_offer_offers__offer_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Offer Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/offers/search/wildcard": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Search offers by product name, cross_number, brand and manufacturer_number",
        "operationId": "search_offers_offers_search_wildcard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_OfferSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/offers/search/text_search": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Search offers by product name, cross_number, brand and manufacturer_number",
        "operationId": "full_text_search_offers_offers_search_text_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "search_term",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Term"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_OfferSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/waybills": {
      "get": {
        "tags": [
          "Waybills"
        ],
        "summary": "Get Waybills",
        "description": "Get waybills by type and user ID",
        "operationId": "get_waybills_waybills_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "WAYBILL_IN",
                    "WAYBILL_OUT",
                    "WAYBILL_RETURN"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Waybill Type"
            }
          },
          {
            "name": "is_pending",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Pending"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "search_term",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Search Term"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_WaybillSchema_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Waybills"
        ],
        "summary": "Create Waybill",
        "operationId": "create_waybill_waybills_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaybillPostSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/waybills/{waybill_id}": {
      "get": {
        "tags": [
          "Waybills"
        ],
        "summary": "Get Waybill",
        "description": "Get waybill by ID",
        "operationId": "get_waybill_waybills__waybill_id__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Waybills"
        ],
        "summary": "Delete Waybill",
        "operationId": "delete_waybill_waybills__waybill_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/waybills/{waybill_id}/offers": {
      "get": {
        "tags": [
          "Waybills"
        ],
        "summary": "Get Waybill Offers",
        "description": "Get all offers in waybill",
        "operationId": "get_waybill_offers_waybills__waybill_id__offers_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaybillOfferSchema"
                  },
                  "title": "Response Get Waybill Offers Waybills  Waybill Id  Offers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Waybills"
        ],
        "summary": "Add Offer To Waybill",
        "operationId": "add_offer_to_waybill_waybills__waybill_id__offers_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaybillOfferPostSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillOfferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/waybills/{waybill_id}/commit": {
      "post": {
        "tags": [
          "Waybills"
        ],
        "summary": "Commit Waybill",
        "operationId": "commit_waybill_waybills__waybill_id__commit_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/waybill-offers/{waybill_offer_id}": {
      "delete": {
        "tags": [
          "Waybill-Offers"
        ],
        "summary": "Delete Offer From Waybill",
        "operationId": "delete_offer_from_waybill_waybill_offers__waybill_offer_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_offer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Offer Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/documents/waybills/{waybill_id}/print": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Print Waybill",
        "operationId": "print_waybill_documents_waybills__waybill_id__print_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "waybill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Waybill Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/documents/price/{price_type}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Price",
        "description": "Get the price list in the specified format.\nCSV: 5.0mb\nXLSX: 1.8mb",
        "operationId": "get_price_documents_price__price_type__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "price_type",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "retail",
                "wholesale"
              ],
              "type": "string",
              "title": "Price Type"
            }
          },
          {
            "name": "ext",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xlsx",
                "csv"
              ],
              "type": "string",
              "title": "Ext"
            }
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Cache"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/documents/send/{email}": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Send Price Email",
        "description": "Send the price list to the email.",
        "operationId": "send_price_email_documents_send__email__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email"
            }
          },
          {
            "name": "price_type",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "retail",
                "wholesale"
              ],
              "type": "string",
              "title": "Price Type"
            }
          },
          {
            "name": "ext",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xlsx",
                "csv"
              ],
              "type": "string",
              "title": "Ext"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/-/health-checks/liveness": {
      "get": {
        "tags": [
          "Utils"
        ],
        "summary": "Api Health Check Liveness",
        "description": "/-/health-checks/liveness endpoint controller\n\nShould return status code 204.",
        "operationId": "api_health_check_liveness___health_checks_liveness_get",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/-/health-checks/readiness": {
      "get": {
        "tags": [
          "Utils"
        ],
        "summary": "Api Health Check Readiness",
        "description": "/-/health-checks/readiness endpoint controller\n\nShould return status code 204.",
        "operationId": "api_health_check_readiness___health_checks_readiness_get",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/-/version": {
      "get": {
        "tags": [
          "Utils"
        ],
        "summary": "Api Microservice Version",
        "description": "Returns microservice version from pyproject.toml",
        "operationId": "api_microservice_version___version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Api Microservice Version   Version Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BearerResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "BearerResponse"
      },
      "Body_auth_access_tokens_db_login_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_auth_access_tokens_db_login_auth_login_post"
      },
      "Body_patch_category_categories__category_id__patch": {
        "properties": {
          "category_payload": {
            "$ref": "#/components/schemas/CategoryPutSchema"
          },
          "image_blob": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "category_payload"
        ],
        "title": "Body_patch_category_categories__category_id__patch"
      },
      "Body_post_category_categories_post": {
        "properties": {
          "category_payload": {
            "$ref": "#/components/schemas/CategoryPostSchema"
          },
          "image_blob": {
            "type": "string",
            "format": "binary",
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "category_payload",
          "image_blob"
        ],
        "title": "Body_post_category_categories_post"
      },
      "Body_post_product_products_post": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductPostSchema"
          },
          "image_blob": {
            "type": "string",
            "format": "binary",
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "product",
          "image_blob"
        ],
        "title": "Body_post_product_products_post"
      },
      "Body_post_sub_category_sub_categories_post": {
        "properties": {
          "sub_category": {
            "$ref": "#/components/schemas/SubCategoryPostSchema"
          },
          "image_blob": {
            "type": "string",
            "format": "binary",
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "sub_category",
          "image_blob"
        ],
        "title": "Body_post_sub_category_sub_categories_post"
      },
      "Body_put_product_products__product_id__put": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductPutSchema"
          },
          "image_blob": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "product"
        ],
        "title": "Body_put_product_products__product_id__put"
      },
      "Body_put_sub_category_sub_categories__sub_category_id__put": {
        "properties": {
          "sub_category": {
            "$ref": "#/components/schemas/SubCategoryPutSchema"
          },
          "image_blob": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Blob"
          }
        },
        "type": "object",
        "required": [
          "sub_category"
        ],
        "title": "Body_put_sub_category_sub_categories__sub_category_id__put"
      },
      "Body_reset_forgot_password_auth_forgot_password_post": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_reset_forgot_password_auth_forgot_password_post"
      },
      "Body_reset_reset_password_auth_reset_password_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "password"
        ],
        "title": "Body_reset_reset_password_auth_reset_password_post"
      },
      "Body_verify_request_token_auth_request_verify_token_post": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_verify_request_token_auth_request_verify_token_post"
      },
      "Body_verify_verify_auth_verify_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Body_verify_verify_auth_verify_post"
      },
      "CategoryPostSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryPostSchema"
      },
      "CategoryPutSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryPutSchema"
      },
      "CategorySchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug",
            "examples": [
              "svechi-ford"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "slug"
        ],
        "title": "CategorySchema"
      },
      "ErrorModel": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OfferPostSchema": {
        "properties": {
          "address_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Id",
            "examples": [
              "AA-TEST"
            ]
          },
          "brand": {
            "type": "string",
            "title": "Brand",
            "examples": [
              "MARKON"
            ]
          },
          "manufacturer_number": {
            "type": "string",
            "title": "Manufacturer Number",
            "examples": [
              "6000180"
            ]
          },
          "internal_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "price_rub": {
            "type": "number",
            "title": "Price Rub",
            "examples": [1000]
          },
          "super_wholesale_price_rub": {
            "type": "number",
            "title": "Super Wholesale Price Rub",
            "examples": [500]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "examples": [2]
          },
          "product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Product Id",
            "examples": [
              "b41f51ed-1969-461e-a966-7dd7d0752c9e"
            ]
          }
        },
        "type": "object",
        "required": [
          "brand",
          "manufacturer_number",
          "price_rub",
          "super_wholesale_price_rub",
          "quantity",
          "product_id"
        ],
        "title": "OfferPostSchema"
      },
      "OfferPutSchema": {
        "properties": {
          "address_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Id",
            "examples": [
              "AA-TEST"
            ]
          },
          "brand": {
            "type": "string",
            "title": "Brand",
            "examples": [
              "MARKON"
            ]
          },
          "manufacturer_number": {
            "type": "string",
            "title": "Manufacturer Number",
            "examples": [
              "6000180"
            ]
          },
          "internal_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "price_rub": {
            "type": "number",
            "title": "Price Rub",
            "examples": [1000]
          },
          "super_wholesale_price_rub": {
            "type": "number",
            "title": "Super Wholesale Price Rub",
            "examples": [500]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "examples": [2]
          },
          "product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Product Id",
            "examples": [
              "b41f51ed-1969-461e-a966-7dd7d0752c9e"
            ]
          }
        },
        "type": "object",
        "required": [
          "brand",
          "manufacturer_number",
          "price_rub",
          "super_wholesale_price_rub",
          "quantity",
          "product_id"
        ],
        "title": "OfferPutSchema"
      },
      "OfferSchema": {
        "properties": {
          "address_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Id",
            "examples": [
              "AA-TEST"
            ]
          },
          "brand": {
            "type": "string",
            "title": "Brand",
            "examples": [
              "MARKON"
            ]
          },
          "manufacturer_number": {
            "type": "string",
            "title": "Manufacturer Number",
            "examples": [
              "6000180"
            ]
          },
          "internal_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "price_rub": {
            "type": "number",
            "title": "Price Rub",
            "examples": [1000]
          },
          "super_wholesale_price_rub": {
            "type": "number",
            "title": "Super Wholesale Price Rub",
            "examples": [500]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "examples": [2]
          },
          "product_id": {
            "type": "string",
            "format": "uuid",
            "title": "Product Id",
            "examples": [
              "b41f51ed-1969-461e-a966-7dd7d0752c9e"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "offer_bitrix_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer Bitrix Id",
            "examples": [
              "278495"
            ]
          },
          "category_slug": {
            "type": "string",
            "title": "Category Slug",
            "examples": [
              "svechi-ford"
            ]
          },
          "category_name": {
            "type": "string",
            "title": "Category Name",
            "examples": [
              "Свечи"
            ]
          },
          "sub_category_slug": {
            "type": "string",
            "title": "Sub Category Slug",
            "examples": [
              "svechi-zazhiganiia"
            ]
          },
          "sub_category_name": {
            "type": "string",
            "title": "Sub Category Name",
            "examples": [
              "Свечи зажигания"
            ]
          },
          "product_name": {
            "type": "string",
            "title": "Product Name",
            "examples": [
              "Escort 1990-2000"
            ]
          },
          "cross_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cross Number",
            "examples": [
              "6962492, 1048310, 97AG2K021BA, 1133750, 1048308, 6180371, 94AB2K021AB, 6704271, 1130753"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "examples": [false]
          },
          "wholesale_price_rub": {
            "type": "integer",
            "title": "Wholesale Price Rub",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "brand",
          "manufacturer_number",
          "price_rub",
          "super_wholesale_price_rub",
          "quantity",
          "product_id",
          "id",
          "category_slug",
          "category_name",
          "sub_category_slug",
          "sub_category_name",
          "product_name",
          "is_deleted",
          "wholesale_price_rub"
        ],
        "title": "OfferSchema"
      },
      "Page_OfferSchema_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/OfferSchema"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "Page[OfferSchema]"
      },
      "Page_ProductSchema_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ProductSchema"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "Page[ProductSchema]"
      },
      "Page_WaybillSchema_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/WaybillSchema"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "size"
        ],
        "title": "Page[WaybillSchema]"
      },
      "ProductPostSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Колодки тормозные передние Escort 1990-2000"
            ]
          },
          "cross_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cross Number",
            "examples": [
              "6962492, 1048310, 97AG2K021BA, 1133750, 1048308, 6180371, 94AB2K021AB, 6704271, 1130753"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "sub_category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sub Category Id",
            "examples": [
              "34805edd-26da-456b-8360-aee69bce5092"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "sub_category_id"
        ],
        "title": "ProductPostSchema"
      },
      "ProductPutSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Колодки тормозные передние Escort 1990-2000"
            ]
          },
          "cross_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cross Number",
            "examples": [
              "6962492, 1048310, 97AG2K021BA, 1133750, 1048308, 6180371, 94AB2K021AB, 6704271, 1130753"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "sub_category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sub Category Id",
            "examples": [
              "34805edd-26da-456b-8360-aee69bce5092"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "sub_category_id"
        ],
        "title": "ProductPutSchema"
      },
      "ProductSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Колодки тормозные передние Escort 1990-2000"
            ]
          },
          "cross_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cross Number",
            "examples": [
              "6962492, 1048310, 97AG2K021BA, 1133750, 1048308, 6180371, 94AB2K021AB, 6704271, 1130753"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "examples": [
              "Колодки тормозные передние"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "sub_category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Sub Category Id",
            "examples": [
              "34805edd-26da-456b-8360-aee69bce5092"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "bitrix_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bitrix Id",
            "examples": [
              "278495"
            ]
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "category_slug": {
            "type": "string",
            "title": "Category Slug",
            "examples": [
              "svechi-ford"
            ]
          },
          "category_name": {
            "type": "string",
            "title": "Category Name",
            "examples": [
              "Свечи"
            ]
          },
          "sub_category_slug": {
            "type": "string",
            "title": "Sub Category Slug",
            "examples": [
              "svechi-zazhiganiia"
            ]
          },
          "sub_category_name": {
            "type": "string",
            "title": "Sub Category Name",
            "examples": [
              "Свечи зажигания"
            ]
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "examples": [false]
          }
        },
        "type": "object",
        "required": [
          "name",
          "sub_category_id",
          "id",
          "category_slug",
          "category_name",
          "sub_category_slug",
          "sub_category_name",
          "is_deleted"
        ],
        "title": "ProductSchema"
      },
      "SubCategoryPostSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи зажигания"
            ]
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Category Id",
            "examples": [
              "2b3fb1a9-f13b-430f-a78e-94041fb0ed44"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "category_id"
        ],
        "title": "SubCategoryPostSchema"
      },
      "SubCategoryPutSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи зажигания"
            ]
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Category Id",
            "examples": [
              "2b3fb1a9-f13b-430f-a78e-94041fb0ed44"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "category_id"
        ],
        "title": "SubCategoryPutSchema"
      },
      "SubCategorySchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "examples": [
              "Свечи зажигания"
            ]
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "title": "Category Id",
            "examples": [
              "2b3fb1a9-f13b-430f-a78e-94041fb0ed44"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug",
            "examples": [
              "svechi-zazhiganiia"
            ]
          },
          "category_slug": {
            "type": "string",
            "title": "Category Slug",
            "examples": [
              "svechi-ford"
            ]
          },
          "category_name": {
            "type": "string",
            "title": "Category Name",
            "examples": [
              "Свечи"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "category_id",
          "id",
          "slug",
          "category_slug",
          "category_name"
        ],
        "title": "SubCategorySchema"
      },
      "UserCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name",
            "examples": [
              "Vasilii"
            ]
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "examples": [
              "Pinov"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "employee",
              "user"
            ],
            "title": "Role",
            "default": "user",
            "examples": [
              "user"
            ]
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Менеджер",
                  "Кладовщик"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Position",
            "examples": [
              "Менеджер"
            ]
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "customer_type": {
            "type": "string",
            "enum": [
              "USER_RETAIL",
              "USER_WHOLESALE",
              "USER_SUPER_WHOLESALE"
            ],
            "title": "Customer Type",
            "default": "USER_RETAIL",
            "examples": [
              "USER_RETAIL"
            ]
          },
          "mailing": {
            "type": "boolean",
            "title": "Mailing",
            "default": false
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser",
            "default": false
          },
          "is_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserRead": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name",
            "examples": [
              "Vasilii"
            ]
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "examples": [
              "Pinov"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "employee",
              "user"
            ],
            "title": "Role",
            "default": "user",
            "examples": [
              "user"
            ]
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Менеджер",
                  "Кладовщик"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Position",
            "examples": [
              "Менеджер"
            ]
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "customer_type": {
            "type": "string",
            "enum": [
              "USER_RETAIL",
              "USER_WHOLESALE",
              "USER_SUPER_WHOLESALE"
            ],
            "title": "Customer Type",
            "default": "USER_RETAIL",
            "examples": [
              "USER_RETAIL"
            ]
          },
          "mailing": {
            "type": "boolean",
            "title": "Mailing",
            "default": false
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "id",
          "email"
        ],
        "title": "UserRead"
      },
      "UserUpdate": {
        "properties": {
          "first_name": {
            "type": "string",
            "title": "First Name",
            "examples": [
              "Vasilii"
            ]
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "examples": [
              "Pinov"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "employee",
              "user"
            ],
            "title": "Role",
            "default": "user",
            "examples": [
              "user"
            ]
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Менеджер",
                  "Кладовщик"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Position",
            "examples": [
              "Менеджер"
            ]
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "examples": [
              "https://storage.yandexcloud.net/tcf-images/default.svg"
            ]
          },
          "customer_type": {
            "type": "string",
            "enum": [
              "USER_RETAIL",
              "USER_WHOLESALE",
              "USER_SUPER_WHOLESALE"
            ],
            "title": "Customer Type",
            "default": "USER_RETAIL",
            "examples": [
              "USER_RETAIL"
            ]
          },
          "mailing": {
            "type": "boolean",
            "title": "Mailing",
            "default": false
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "is_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Verified"
          }
        },
        "type": "object",
        "required": [
          "first_name"
        ],
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WaybillOfferPostSchema": {
        "properties": {
          "offer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Offer Id"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Quantity",
            "examples": [10]
          },
          "brand": {
            "type": "string",
            "minLength": 1,
            "title": "Brand",
            "examples": [
              "BSG"
            ]
          },
          "manufacturer_number": {
            "type": "string",
            "minLength": 1,
            "title": "Manufacturer Number",
            "examples": [
              "BSG-12345"
            ]
          },
          "price_rub": {
            "type": "number",
            "title": "Price Rub",
            "examples": [1000]
          }
        },
        "type": "object",
        "required": [
          "offer_id",
          "quantity",
          "brand",
          "manufacturer_number",
          "price_rub"
        ],
        "title": "WaybillOfferPostSchema"
      },
      "WaybillOfferSchema": {
        "properties": {
          "offer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Offer Id"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Quantity",
            "examples": [10]
          },
          "brand": {
            "type": "string",
            "minLength": 1,
            "title": "Brand",
            "examples": [
              "BSG"
            ]
          },
          "manufacturer_number": {
            "type": "string",
            "minLength": 1,
            "title": "Manufacturer Number",
            "examples": [
              "BSG-12345"
            ]
          },
          "price_rub": {
            "type": "number",
            "title": "Price Rub",
            "examples": [1000]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "waybill_id": {
            "type": "string",
            "format": "uuid",
            "title": "Waybill Id"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name"
          },
          "address_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Id",
            "examples": [
              "AA-TEST"
            ]
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "category_slug": {
            "type": "string",
            "title": "Category Slug",
            "examples": [
              "svechi-ford"
            ]
          },
          "category_name": {
            "type": "string",
            "title": "Category Name",
            "examples": [
              "Свечи"
            ]
          },
          "sub_category_slug": {
            "type": "string",
            "title": "Sub Category Slug",
            "examples": [
              "svechi-zazhiganiia"
            ]
          },
          "sub_category_name": {
            "type": "string",
            "title": "Sub Category Name",
            "examples": [
              "Свечи зажигания"
            ]
          }
        },
        "type": "object",
        "required": [
          "offer_id",
          "quantity",
          "brand",
          "manufacturer_number",
          "price_rub",
          "id",
          "waybill_id",
          "product_name",
          "image_url",
          "category_slug",
          "category_name",
          "sub_category_slug",
          "sub_category_name"
        ],
        "title": "WaybillOfferSchema"
      },
      "WaybillPostSchema": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "waybill_type": {
            "type": "string",
            "enum": [
              "WAYBILL_IN",
              "WAYBILL_OUT",
              "WAYBILL_RETURN"
            ],
            "title": "Waybill Type"
          },
          "is_pending": {
            "type": "boolean",
            "title": "Is Pending",
            "examples": [true]
          },
          "counterparty_name": {
            "type": "string",
            "title": "Counterparty Name",
            "examples": [
              "ООО Рога и Копыта"
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "waybill_type",
          "is_pending",
          "counterparty_name"
        ],
        "title": "WaybillPostSchema"
      },
      "WaybillSchema": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "waybill_type": {
            "type": "string",
            "enum": [
              "WAYBILL_IN",
              "WAYBILL_OUT",
              "WAYBILL_RETURN"
            ],
            "title": "Waybill Type"
          },
          "is_pending": {
            "type": "boolean",
            "title": "Is Pending",
            "examples": [true]
          },
          "counterparty_name": {
            "type": "string",
            "title": "Counterparty Name",
            "examples": [
              "ООО Рога и Копыта"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "author": {
            "type": "string",
            "title": "Author",
            "examples": [
              "Vasiliy Pinov"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "waybill_type",
          "is_pending",
          "counterparty_name",
          "id",
          "author",
          "created_at",
          "updated_at"
        ],
        "title": "WaybillSchema"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {

            },
            "tokenUrl": "auth/login"
          }
        }
      }
    }
  }
}