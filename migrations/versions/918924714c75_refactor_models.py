"""refactor models

Revision ID: 918924714c75
Revises:
Create Date: 2025-10-10 18:03:33.905467

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '918924714c75'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_categories_name')),
    sa.UniqueConstraint('slug', name='categories_slug_key')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('clerk_id', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'EMPLOYEE', 'USER', name='role', native_enum=False), nullable=False),
    sa.Column('balance_rub', sa.Integer(), nullable=False),
    sa.Column('customer_type', sa.Enum('USER_RETAIL', 'USER_WHOLESALE', 'USER_SUPER_WHOLESALE', name='customertype', native_enum=False), nullable=False),
    sa.Column('mailing', sa.Boolean(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('shipping_method', sa.Enum('SELF_PICKUP', 'CARGO', 'OTHER', name='shippingmethod', native_enum=False), nullable=True),
    sa.Column('shipping_company', sa.String(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('clerk_id', name=op.f('uq_users_clerk_id')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('addresses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('shipping_method', sa.Enum('SELF_PICKUP', 'CARGO', 'OTHER', name='shippingmethod', native_enum=False), nullable=False),
    sa.Column('shipping_company', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_addresses_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_addresses'))
    )
    op.create_table('audit_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_log_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_log'))
    )
    op.create_table('carts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ORDERED', 'ABANDONED', name='cartstatus', native_enum=False), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_carts_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_carts'))
    )
    op.create_table('sub_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_sub_categories_category_id_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sub_categories')),
    sa.UniqueConstraint('slug', name='sub_categories_slug_key')
    )
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name=op.f('fk_orders_address_id_addresses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_orders_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bitrix_id', sa.String(), nullable=True),
    sa.Column('sub_category_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('cross_number', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['sub_category_id'], ['sub_categories.id'], name=op.f('fk_products_sub_category_id_sub_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products')),
    sa.UniqueConstraint('slug', name='products_slug_key')
    )
    op.create_table('offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('offer_bitrix_id', sa.String(), nullable=True),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('manufacturer_number', sa.String(), nullable=False),
    sa.Column('internal_description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('price_rub', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('super_wholesale_price_rub', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_offers_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_offers'))
    )
    op.create_table('waybills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('waybill_type', sa.Enum('WAYBILL_IN', 'WAYBILL_OUT', 'WAYBILL_RETURN', name='waybilltype', native_enum=False), nullable=False),
    sa.Column('is_pending', sa.Boolean(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_waybills_author_id_users')),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], name=op.f('fk_waybills_customer_id_users')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_waybills_order_id_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_waybills'))
    )
    op.create_index(op.f('ix_waybills_order_id'), 'waybills', ['order_id'], unique=True)
    op.create_table('cart_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cart_id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_cart_offers_cart_id_carts')),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], name=op.f('fk_cart_offers_offer_id_offers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cart_offers'))
    )
    op.create_table('order_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('manufacturer_number', sa.String(), nullable=True),
    sa.Column('price_rub', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], name=op.f('fk_order_offers_offer_id_offers')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_offers_order_id_orders')),
    sa.PrimaryKeyConstraint('id', 'order_id', 'offer_id', name=op.f('pk_order_offers'))
    )
    op.create_table('waybill_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('waybill_id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('manufacturer_number', sa.String(), nullable=True),
    sa.Column('price_rub', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], name=op.f('fk_waybill_offers_offer_id_offers')),
    sa.ForeignKeyConstraint(['waybill_id'], ['waybills.id'], name=op.f('fk_waybill_offers_waybill_id_waybills')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_waybill_offers'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('waybill_offers')
    op.drop_table('order_offers')
    op.drop_table('cart_offers')
    op.drop_index(op.f('ix_waybills_order_id'), table_name='waybills')
    op.drop_table('waybills')
    op.drop_table('offers')
    op.drop_table('products')
    op.drop_table('orders')
    op.drop_table('sub_categories')
    op.drop_table('carts')
    op.drop_table('audit_log')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
