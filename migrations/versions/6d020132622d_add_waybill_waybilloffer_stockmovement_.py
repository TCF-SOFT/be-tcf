"""add WayBill WaybillOffer StockMovement and soft delete for Product/Offer

Revision ID: 6d020132622d
Revises: 0c288ad36040
Create Date: 2025-05-28 13:28:07.120362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6d020132622d'
down_revision: Union[str, None] = '0c288ad36040'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('waybills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('is_pending', sa.Boolean(), nullable=False),
    sa.Column('counterparty_name', sa.String(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_waybills_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_waybills'))
    )
    op.create_table('stock_movements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=False),
    sa.Column('waybill_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('reverted', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], name=op.f('fk_stock_movements_offer_id_offers')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_stock_movements_user_id_users')),
    sa.ForeignKeyConstraint(['waybill_id'], ['waybills.id'], name=op.f('fk_stock_movements_waybill_id_waybills')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_movements'))
    )
    op.create_table('waybill_offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('waybill_id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('manufacturer_number', sa.String(), nullable=True),
    sa.Column('price_rub', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], name=op.f('fk_waybill_offers_offer_id_offers')),
    sa.ForeignKeyConstraint(['waybill_id'], ['waybills.id'], name=op.f('fk_waybill_offers_waybill_id_waybills')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_waybill_offers'))
    )
    op.add_column('offers', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.add_column('products', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.execute("UPDATE offers SET is_deleted = FALSE")
    op.execute("UPDATE products SET is_deleted = FALSE")
    op.alter_column('offers', 'is_deleted', nullable=False)
    op.alter_column('products', 'is_deleted', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('products', 'is_deleted')
    op.drop_column('offers', 'is_deleted')
    op.drop_table('waybill_offers')
    op.drop_table('stock_movements')
    op.drop_table('waybills')
    # ### end Alembic commands ###
